
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDECOMMA DIVIDE DOT EQ IDENTIFIER KEYWORD_FUNC KEYWORD_FUNC KEYWORD_IMPORT KEYWORD_IMPORT KEYWORD_PACKAGE KEYWORD_PACKAGE LBRACE LPAREN MINUS NUMBER PLUS RBRACE RPAREN SEMICOLON STRING TIMESprogram : package_statement import_statements function_declarationspackage_statement : KEYWORD_PACKAGE IDENTIFIER SEMICOLONimport_statements : import_statement import_statements\n                         | emptyimport_statement : KEYWORD_IMPORT STRING SEMICOLONfunction_declarations : function_declaration function_declarations\n                             | emptyfunction_declaration : KEYWORD_FUNC IDENTIFIER LPAREN RPAREN LBRACE statements RBRACEstatements : statement statements\n                  | emptystatement : assignment_statement SEMICOLON\n                 | function_call_statement SEMICOLONassignment_statement : IDENTIFIER EQ expressionfunction_call_statement : IDENTIFIER LPAREN expression_list RPARENexpression_list : expression\n                       | expression COMMA expression_listexpression : NUMBER\n                  | STRINGempty :'
    
_lr_action_items = {'KEYWORD_PACKAGE':([0,],[3,]),'$end':([1,2,4,5,6,9,10,11,13,15,16,18,30,],[0,-19,-19,-19,-4,-1,-19,-7,-3,-2,-6,-5,-8,]),'KEYWORD_IMPORT':([2,5,15,18,],[7,7,-2,-5,]),'KEYWORD_FUNC':([2,4,5,6,10,13,15,18,30,],[-19,12,-19,-4,12,-3,-2,-5,-8,]),'IDENTIFIER':([3,12,21,24,32,33,],[8,17,22,22,-11,-12,]),'STRING':([7,28,29,40,],[14,36,36,36,]),'SEMICOLON':([8,14,26,27,34,35,36,39,],[15,18,32,33,-13,-17,-18,-14,]),'LPAREN':([17,22,],[19,29,]),'RPAREN':([19,35,36,37,38,41,],[20,-17,-18,39,-15,-16,]),'LBRACE':([20,],[21,]),'RBRACE':([21,23,24,25,31,32,33,],[-19,30,-19,-10,-9,-11,-12,]),'EQ':([22,],[28,]),'NUMBER':([28,29,40,],[35,35,35,]),'COMMA':([35,36,38,],[-17,-18,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'package_statement':([0,],[2,]),'import_statements':([2,5,],[4,13,]),'import_statement':([2,5,],[5,5,]),'empty':([2,4,5,10,21,24,],[6,11,6,11,25,25,]),'function_declarations':([4,10,],[9,16,]),'function_declaration':([4,10,],[10,10,]),'statements':([21,24,],[23,31,]),'statement':([21,24,],[24,24,]),'assignment_statement':([21,24,],[26,26,]),'function_call_statement':([21,24,],[27,27,]),'expression':([28,29,40,],[34,38,38,]),'expression_list':([29,40,],[37,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> package_statement import_statements function_declarations','program',3,'p_program','parser.py',75),
  ('package_statement -> KEYWORD_PACKAGE IDENTIFIER SEMICOLON','package_statement',3,'p_package_statement','parser.py',79),
  ('import_statements -> import_statement import_statements','import_statements',2,'p_import_statements','parser.py',83),
  ('import_statements -> empty','import_statements',1,'p_import_statements','parser.py',84),
  ('import_statement -> KEYWORD_IMPORT STRING SEMICOLON','import_statement',3,'p_import_statement','parser.py',91),
  ('function_declarations -> function_declaration function_declarations','function_declarations',2,'p_function_declarations','parser.py',95),
  ('function_declarations -> empty','function_declarations',1,'p_function_declarations','parser.py',96),
  ('function_declaration -> KEYWORD_FUNC IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE','function_declaration',7,'p_function_declaration','parser.py',103),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',107),
  ('statements -> empty','statements',1,'p_statements','parser.py',108),
  ('statement -> assignment_statement SEMICOLON','statement',2,'p_statement','parser.py',115),
  ('statement -> function_call_statement SEMICOLON','statement',2,'p_statement','parser.py',116),
  ('assignment_statement -> IDENTIFIER EQ expression','assignment_statement',3,'p_assignment_statement','parser.py',120),
  ('function_call_statement -> IDENTIFIER LPAREN expression_list RPAREN','function_call_statement',4,'p_function_call_statement','parser.py',124),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',128),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','parser.py',129),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',136),
  ('expression -> STRING','expression',1,'p_expression','parser.py',137),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',141),
]
