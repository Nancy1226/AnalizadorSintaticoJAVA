Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT
    ELSE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement statements
Rule 2     statements -> statement
Rule 3     statement -> IF LPAREN expression RPAREN block
Rule 4     statement -> FOR LPAREN statement expression SEMI expression RPAREN block
Rule 5     statement -> DO block WHILE LPAREN expression RPAREN SEMI
Rule 6     statement -> WHILE LPAREN expression RPAREN block
Rule 7     statement -> PRINT LPAREN expression RPAREN SEMI
Rule 8     statement -> expression SEMI
Rule 9     block -> LBRACE statements RBRACE
Rule 10    block -> LBRACE RBRACE
Rule 11    expression -> expression GT expression
Rule 12    expression -> expression LT expression
Rule 13    expression -> expression EQ expression
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> LPAREN expression RPAREN
Rule 16    expression -> NUMBER
Rule 17    expression -> ID
Rule 18    expression -> STRING
Rule 19    empty -> <empty>

Terminals, with rules where they appear

DO                   : 5
DOT                  : 
ELSE                 : 
EQ                   : 13
FOR                  : 4
GT                   : 11
ID                   : 17
IF                   : 3
LBRACE               : 9 10
LPAREN               : 3 4 5 6 7 15
LT                   : 12
NUMBER               : 16
PLUS                 : 14
PRINT                : 7
RBRACE               : 9 10
RPAREN               : 3 4 5 6 7 15
SEMI                 : 4 5 7 8
STRING               : 18
WHILE                : 5 6
error                : 

Nonterminals, with rules where they appear

block                : 3 4 5 6
empty                : 
expression           : 3 4 4 5 6 7 8 11 11 12 12 13 13 14 14 15
statement            : 1 2 4
statements           : 1 9 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statement -> . IF LPAREN expression RPAREN block
    (4) statement -> . FOR LPAREN statement expression SEMI expression RPAREN block
    (5) statement -> . DO block WHILE LPAREN expression RPAREN SEMI
    (6) statement -> . WHILE LPAREN expression RPAREN block
    (7) statement -> . PRINT LPAREN expression RPAREN SEMI
    (8) statement -> . expression SEMI
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    IF              shift and go to state 3
    FOR             shift and go to state 6
    DO              shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 5

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement . statements
    (2) statements -> statement .
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statement -> . IF LPAREN expression RPAREN block
    (4) statement -> . FOR LPAREN statement expression SEMI expression RPAREN block
    (5) statement -> . DO block WHILE LPAREN expression RPAREN SEMI
    (6) statement -> . WHILE LPAREN expression RPAREN block
    (7) statement -> . PRINT LPAREN expression RPAREN SEMI
    (8) statement -> . expression SEMI
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)
    IF              shift and go to state 3
    FOR             shift and go to state 6
    DO              shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    statement                      shift and go to state 2
    statements                     shift and go to state 13
    expression                     shift and go to state 5

state 3

    (3) statement -> IF . LPAREN expression RPAREN block

    LPAREN          shift and go to state 14


state 4

    (15) expression -> LPAREN . expression RPAREN
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 15

state 5

    (8) statement -> expression . SEMI
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    SEMI            shift and go to state 16
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 6

    (4) statement -> FOR . LPAREN statement expression SEMI expression RPAREN block

    LPAREN          shift and go to state 21


state 7

    (5) statement -> DO . block WHILE LPAREN expression RPAREN SEMI
    (9) block -> . LBRACE statements RBRACE
    (10) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 22

state 8

    (6) statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 24


state 9

    (7) statement -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 25


state 10

    (16) expression -> NUMBER .

    SEMI            reduce using rule 16 (expression -> NUMBER .)
    GT              reduce using rule 16 (expression -> NUMBER .)
    LT              reduce using rule 16 (expression -> NUMBER .)
    EQ              reduce using rule 16 (expression -> NUMBER .)
    PLUS            reduce using rule 16 (expression -> NUMBER .)
    RPAREN          reduce using rule 16 (expression -> NUMBER .)


state 11

    (17) expression -> ID .

    SEMI            reduce using rule 17 (expression -> ID .)
    GT              reduce using rule 17 (expression -> ID .)
    LT              reduce using rule 17 (expression -> ID .)
    EQ              reduce using rule 17 (expression -> ID .)
    PLUS            reduce using rule 17 (expression -> ID .)
    RPAREN          reduce using rule 17 (expression -> ID .)


state 12

    (18) expression -> STRING .

    SEMI            reduce using rule 18 (expression -> STRING .)
    GT              reduce using rule 18 (expression -> STRING .)
    LT              reduce using rule 18 (expression -> STRING .)
    EQ              reduce using rule 18 (expression -> STRING .)
    PLUS            reduce using rule 18 (expression -> STRING .)
    RPAREN          reduce using rule 18 (expression -> STRING .)


state 13

    (1) statements -> statement statements .

    $end            reduce using rule 1 (statements -> statement statements .)
    RBRACE          reduce using rule 1 (statements -> statement statements .)


state 14

    (3) statement -> IF LPAREN . expression RPAREN block
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 26

state 15

    (15) expression -> LPAREN expression . RPAREN
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    RPAREN          shift and go to state 27
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 16

    (8) statement -> expression SEMI .

    IF              reduce using rule 8 (statement -> expression SEMI .)
    FOR             reduce using rule 8 (statement -> expression SEMI .)
    DO              reduce using rule 8 (statement -> expression SEMI .)
    WHILE           reduce using rule 8 (statement -> expression SEMI .)
    PRINT           reduce using rule 8 (statement -> expression SEMI .)
    LPAREN          reduce using rule 8 (statement -> expression SEMI .)
    NUMBER          reduce using rule 8 (statement -> expression SEMI .)
    ID              reduce using rule 8 (statement -> expression SEMI .)
    STRING          reduce using rule 8 (statement -> expression SEMI .)
    $end            reduce using rule 8 (statement -> expression SEMI .)
    RBRACE          reduce using rule 8 (statement -> expression SEMI .)


state 17

    (11) expression -> expression GT . expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 28

state 18

    (12) expression -> expression LT . expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 29

state 19

    (13) expression -> expression EQ . expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 30

state 20

    (14) expression -> expression PLUS . expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 31

state 21

    (4) statement -> FOR LPAREN . statement expression SEMI expression RPAREN block
    (3) statement -> . IF LPAREN expression RPAREN block
    (4) statement -> . FOR LPAREN statement expression SEMI expression RPAREN block
    (5) statement -> . DO block WHILE LPAREN expression RPAREN SEMI
    (6) statement -> . WHILE LPAREN expression RPAREN block
    (7) statement -> . PRINT LPAREN expression RPAREN SEMI
    (8) statement -> . expression SEMI
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    IF              shift and go to state 3
    FOR             shift and go to state 6
    DO              shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    statement                      shift and go to state 32
    expression                     shift and go to state 5

state 22

    (5) statement -> DO block . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 33


state 23

    (9) block -> LBRACE . statements RBRACE
    (10) block -> LBRACE . RBRACE
    (1) statements -> . statement statements
    (2) statements -> . statement
    (3) statement -> . IF LPAREN expression RPAREN block
    (4) statement -> . FOR LPAREN statement expression SEMI expression RPAREN block
    (5) statement -> . DO block WHILE LPAREN expression RPAREN SEMI
    (6) statement -> . WHILE LPAREN expression RPAREN block
    (7) statement -> . PRINT LPAREN expression RPAREN SEMI
    (8) statement -> . expression SEMI
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    RBRACE          shift and go to state 35
    IF              shift and go to state 3
    FOR             shift and go to state 6
    DO              shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    statements                     shift and go to state 34
    statement                      shift and go to state 2
    expression                     shift and go to state 5

state 24

    (6) statement -> WHILE LPAREN . expression RPAREN block
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 36

state 25

    (7) statement -> PRINT LPAREN . expression RPAREN SEMI
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 37

state 26

    (3) statement -> IF LPAREN expression . RPAREN block
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    RPAREN          shift and go to state 38
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 27

    (15) expression -> LPAREN expression RPAREN .

    SEMI            reduce using rule 15 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 15 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 15 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 15 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 15 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 15 (expression -> LPAREN expression RPAREN .)


state 28

    (11) expression -> expression GT expression .
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMI            reduce using rule 11 (expression -> expression GT expression .)
    RPAREN          reduce using rule 11 (expression -> expression GT expression .)
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20

  ! GT              [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 11 (expression -> expression GT expression .) ]


state 29

    (12) expression -> expression LT expression .
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMI            reduce using rule 12 (expression -> expression LT expression .)
    RPAREN          reduce using rule 12 (expression -> expression LT expression .)
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20

  ! GT              [ reduce using rule 12 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 12 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 12 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 12 (expression -> expression LT expression .) ]


state 30

    (13) expression -> expression EQ expression .
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMI            reduce using rule 13 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 13 (expression -> expression EQ expression .)
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20

  ! GT              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 13 (expression -> expression EQ expression .) ]


state 31

    (14) expression -> expression PLUS expression .
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMI            reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20

  ! GT              [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 14 (expression -> expression PLUS expression .) ]


state 32

    (4) statement -> FOR LPAREN statement . expression SEMI expression RPAREN block
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 39

state 33

    (5) statement -> DO block WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 40


state 34

    (9) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 41


state 35

    (10) block -> LBRACE RBRACE .

    WHILE           reduce using rule 10 (block -> LBRACE RBRACE .)
    IF              reduce using rule 10 (block -> LBRACE RBRACE .)
    FOR             reduce using rule 10 (block -> LBRACE RBRACE .)
    DO              reduce using rule 10 (block -> LBRACE RBRACE .)
    PRINT           reduce using rule 10 (block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 10 (block -> LBRACE RBRACE .)
    NUMBER          reduce using rule 10 (block -> LBRACE RBRACE .)
    ID              reduce using rule 10 (block -> LBRACE RBRACE .)
    STRING          reduce using rule 10 (block -> LBRACE RBRACE .)
    $end            reduce using rule 10 (block -> LBRACE RBRACE .)
    RBRACE          reduce using rule 10 (block -> LBRACE RBRACE .)


state 36

    (6) statement -> WHILE LPAREN expression . RPAREN block
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    RPAREN          shift and go to state 42
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 37

    (7) statement -> PRINT LPAREN expression . RPAREN SEMI
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    RPAREN          shift and go to state 43
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 38

    (3) statement -> IF LPAREN expression RPAREN . block
    (9) block -> . LBRACE statements RBRACE
    (10) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 44

state 39

    (4) statement -> FOR LPAREN statement expression . SEMI expression RPAREN block
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    SEMI            shift and go to state 45
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 40

    (5) statement -> DO block WHILE LPAREN . expression RPAREN SEMI
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 46

state 41

    (9) block -> LBRACE statements RBRACE .

    WHILE           reduce using rule 9 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 9 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 9 (block -> LBRACE statements RBRACE .)
    DO              reduce using rule 9 (block -> LBRACE statements RBRACE .)
    PRINT           reduce using rule 9 (block -> LBRACE statements RBRACE .)
    LPAREN          reduce using rule 9 (block -> LBRACE statements RBRACE .)
    NUMBER          reduce using rule 9 (block -> LBRACE statements RBRACE .)
    ID              reduce using rule 9 (block -> LBRACE statements RBRACE .)
    STRING          reduce using rule 9 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 9 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 9 (block -> LBRACE statements RBRACE .)


state 42

    (6) statement -> WHILE LPAREN expression RPAREN . block
    (9) block -> . LBRACE statements RBRACE
    (10) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 47

state 43

    (7) statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 48


state 44

    (3) statement -> IF LPAREN expression RPAREN block .

    IF              reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    DO              reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    PRINT           reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    STRING          reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 3 (statement -> IF LPAREN expression RPAREN block .)


state 45

    (4) statement -> FOR LPAREN statement expression SEMI . expression RPAREN block
    (11) expression -> . expression GT expression
    (12) expression -> . expression LT expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . LPAREN expression RPAREN
    (16) expression -> . NUMBER
    (17) expression -> . ID
    (18) expression -> . STRING

    LPAREN          shift and go to state 4
    NUMBER          shift and go to state 10
    ID              shift and go to state 11
    STRING          shift and go to state 12

    expression                     shift and go to state 49

state 46

    (5) statement -> DO block WHILE LPAREN expression . RPAREN SEMI
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    RPAREN          shift and go to state 50
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 47

    (6) statement -> WHILE LPAREN expression RPAREN block .

    IF              reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    DO              reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    PRINT           reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    STRING          reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)
    RBRACE          reduce using rule 6 (statement -> WHILE LPAREN expression RPAREN block .)


state 48

    (7) statement -> PRINT LPAREN expression RPAREN SEMI .

    IF              reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    ID              reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 7 (statement -> PRINT LPAREN expression RPAREN SEMI .)


state 49

    (4) statement -> FOR LPAREN statement expression SEMI expression . RPAREN block
    (11) expression -> expression . GT expression
    (12) expression -> expression . LT expression
    (13) expression -> expression . EQ expression
    (14) expression -> expression . PLUS expression

    RPAREN          shift and go to state 51
    GT              shift and go to state 17
    LT              shift and go to state 18
    EQ              shift and go to state 19
    PLUS            shift and go to state 20


state 50

    (5) statement -> DO block WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 52


state 51

    (4) statement -> FOR LPAREN statement expression SEMI expression RPAREN . block
    (9) block -> . LBRACE statements RBRACE
    (10) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 53

state 52

    (5) statement -> DO block WHILE LPAREN expression RPAREN SEMI .

    IF              reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    NUMBER          reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    ID              reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 5 (statement -> DO block WHILE LPAREN expression RPAREN SEMI .)


state 53

    (4) statement -> FOR LPAREN statement expression SEMI expression RPAREN block .

    IF              reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    FOR             reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    DO              reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    WHILE           reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    PRINT           reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    LPAREN          reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    NUMBER          reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    ID              reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    STRING          reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    $end            reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)
    RBRACE          reduce using rule 4 (statement -> FOR LPAREN statement expression SEMI expression RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GT in state 28 resolved as shift
WARNING: shift/reduce conflict for LT in state 28 resolved as shift
WARNING: shift/reduce conflict for EQ in state 28 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 28 resolved as shift
WARNING: shift/reduce conflict for GT in state 29 resolved as shift
WARNING: shift/reduce conflict for LT in state 29 resolved as shift
WARNING: shift/reduce conflict for EQ in state 29 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 29 resolved as shift
WARNING: shift/reduce conflict for GT in state 30 resolved as shift
WARNING: shift/reduce conflict for LT in state 30 resolved as shift
WARNING: shift/reduce conflict for EQ in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for GT in state 31 resolved as shift
WARNING: shift/reduce conflict for LT in state 31 resolved as shift
WARNING: shift/reduce conflict for EQ in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
